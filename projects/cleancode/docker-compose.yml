version: '2.1'
services:
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - dc1ring


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - dc1ring

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "success:1:1,failed:1:1,solrfailed:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dc1ring
    depends_on:
      - zookeeper
      - mongodb


  portainer:
    image: portainer/portainer
    networks:
      - dc1ring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    # Enable you to access potainers web interface from your host machine
    # using http://localhost:10001
    ports:
      - "10001:9000"
    depends_on:
      - mongodb
      - zookeeper
      - kafka

  cleancode:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - dc1ring
    ports:
      - "9191:8080"
    depends_on:
      - portainer
      - mongodb
      - zookeeper
      - kafka

networks:
  dc1ring:

volumes:
  mongodb_data_container:
  data: